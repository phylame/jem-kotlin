/*
 * Copyright 2014-2016 Peng Wan <phylame@163.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package pw.phylame.jem.epm

import pw.phylame.jem.core.Named
import pw.phylame.jem.core.mapped
import java.util.zip.Deflater

open class CommonConfig(val name: String, val map: Map<String, Any>) {
    protected val prefix by lazy {
        if (name.isNotEmpty()) name + '.' else ""
    }
}

open class ZipParseConfig(name: String, map: Map<String, Any>) : CommonConfig(name, map) {

}

open class ZipMakeConfig(name: String, map: Map<String, Any>) : CommonConfig(name, map) {
    @Named("zip.method")
    val zipMethod: Int by mapped(map, Deflater.DEFLATED, prefix)

    @Named("zip.level")
    val zipLevel: Int by mapped(map, Deflater.DEFAULT_COMPRESSION, prefix)

    @Named("zip.comment")
    val zipComment: String by mapped(map, "generated by ${pw.phylame.jem.core.NAME} v${pw.phylame.jem.core.VERSION}", prefix)
}